#!/usr/bin/env python
'''
Autogenerated code using arya.py
Original Object Document Input: 
{"totalCount":"1","imdata":[{"cdpIfPol":{"attributes":{"adminSt":"enabled","annotation":"","childAction":"","descr":"","dn":"uni/infra/cdpIfP-wankim-test-1","extMngdBy":"","lcOwn":"local","modTs":"2023-07-02T11:11:37.343+09:00","monPolDn":"uni/fabric/monfab-default","name":"wankim-test-1","nameAlias":"","ownerKey":"","ownerTag":"","status":"","uid":"15374","userdom":":all:"}}}]}
raise RuntimeError('Please review the auto generated code before ' +
                    'executing the output. Some placeholders will ' +
                    'need to be changed')
'''

# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.naming
import cobra.mit.request
import cobra.mit.session
import cobra.model.cdp
from cobra.internal.codec.xmlcodec import toXMLStr

# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession('https://10.70.136.21', 'admin', '1234Qwer')
md = cobra.mit.access.MoDirectory(ls)
md.login()

# the top level object on which operations will be made
# Confirm the dn below is for your top dn
topDn = cobra.mit.naming.Dn.fromString('uni/infra/cdpIfP-wankim-test-1')
topParentDn = topDn.getParent()
topMo = md.lookupByDn(topParentDn)

# build the request using cobra syntax
#cdpIfPol = cobra.model.cdp.IfPol(topMo, adminSt='enabled', annotation='', descr='', extMngdBy='', name='wankim-test-1', nameAlias='', ownerKey='', ownerTag='', userdom=':all:')
cdpIfPol = cobra.model.cdp.IfPol(topMo, adminSt='enabled', name='wankim-test-1', userdom=':all:')

# commit the generated code to APIC
print(toXMLStr(topMo))
c = cobra.mit.request.ConfigRequest()
c.addMo(topMo)
md.commit(c)

